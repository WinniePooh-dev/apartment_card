{"version":3,"sources":["lib/colors.ts","api/index.ts","redux/reducers/ui.ts","redux/selectors/ui.ts","components/Switch.tsx","components/Loader.tsx","lib/themes.ts","redux/reducers/apartments.ts","redux/selectors/apartments.ts","App.tsx","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["Colors","mainColor","secondColor","thirdColor","activeColor","MockDatabase","data","id","price","square","img","getApartments","Promise","resolve","setTimeout","UITheme","initialState","fetching","theme","Light","SET_FETCHING","SET_THEME","setFetching","type","payload","selectTheme","createSelector","state","ui","selectFetching","Switch","dispatch","useDispatch","useSelector","StyledSwitch","Input","onClick","setTheme","Dark","Label","htmlFor","StyledSun","size","StyledMoon","styled","Sun","Moon","input","p","backgroundColor","label","div","StyledLoader","Spiner","keyframes","Loader","themes","dark","textColor","reverseColor","light","SET_APARTMENTS","setApartments","apartments","selectApartments","ApartmentCard","lazy","then","module","default","App","useEffect","console","log","React","version","a","Error","message","fallback","Main","CardList","map","apartment","key","main","rootReducer","combineReducers","action","store","configureStore","reducer","GlobalStyle","createGlobalStyle","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.c0587783.chunk.js","sourcesContent":["export const Colors = {\r\n  mainColor: '#4089F6',\r\n  secondColor: '#444444',\r\n  thirdColor: '#FFFF00',\r\n  activeColor: '#ff6347'\r\n};\r\n","export interface ApartmentData {\r\n  id: number;\r\n  price: number;\r\n  square: number;\r\n  img: string;\r\n}\r\n\r\nexport default class MockDatabase {\r\n  private static data: ApartmentData[] = [\r\n    {\r\n      id: 1,\r\n      price: 14000,\r\n      square: 29,\r\n      img: 'https://novostroyki.shop/wp-content/uploads/2021/01/2250619.jpg'\r\n    },\r\n    {\r\n      id: 2,\r\n      price: 20000,\r\n      square: 45,\r\n      img: 'https://urbanlook.ru/wp-content/uploads/2017/10/%D0%90%D0%BF%D0%B0%D1%80%D1%82%D0%B0%D0%BC%D0%B5%D0%BD%D1%82%D1%8B-552x367.jpg'\r\n    },\r\n    {\r\n      id: 3,\r\n      price: 9000,\r\n      square: 21,\r\n      img: 'https://cdn.mskguru.ru/uploads/news/spros-na-apartamenty-moskve-v-pervom-kvartale-zametno-snizilsja_l.jpg'\r\n    },\r\n    {\r\n      id: 4,\r\n      price: 10000,\r\n      square: 30,\r\n      img: 'https://rcmm.ru/uploads/posts/2016-11_/1478682970_ft2085841.jpg'\r\n    },\r\n    {\r\n      id: 5,\r\n      price: 18000,\r\n      square: 31.8,\r\n      img: 'https://andornn.ru/upload/iblock/cf1/showroom_-%2815%29.jpg'\r\n    },\r\n    {\r\n      id: 6,\r\n      price: 17000,\r\n      square: 35,\r\n      img: 'https://cdn.iz.ru/sites/default/files/styles/1920x1080/public/article-2021-01/kitchen-living-room-4043091_1920.jpg?itok=JsuzfmRf'\r\n    }\r\n  ];\r\n\r\n  static getApartments = () => {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => resolve(MockDatabase.data), 500);\r\n    });\r\n  };\r\n}\r\n","import {AnyAction} from 'redux';\r\n\r\nexport enum UITheme {\r\n  Dark = 'dark',\r\n  Light = 'light'\r\n}\r\n\r\nexport interface UI {\r\n  fetching: boolean;\r\n  theme: UITheme;\r\n}\r\n\r\nconst initialState: UI = {\r\n  fetching: true,\r\n  theme: UITheme.Light\r\n};\r\n\r\nexport const SET_FETCHING = 'SET_FETCHING';\r\nexport const SET_THEME = 'SET_THEME';\r\n\r\nexport default (state = initialState, action: AnyAction): UI => {\r\n  switch (action.type) {\r\n    case SET_FETCHING:\r\n      return {...state, fetching: action.payload.fetching};\r\n    case SET_THEME:\r\n      return {...state, theme: action.payload.theme};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setFetching = (fetching: boolean): AnyAction => {\r\n  return {type: SET_FETCHING, payload: {fetching}};\r\n};\r\n\r\nexport const setTheme = (theme: UITheme): AnyAction => {\r\n  return {type: SET_THEME, payload: {theme}};\r\n};\r\n","import {createSelector} from 'reselect';\r\nimport {RootState} from '../reducers';\r\n\r\nexport const selectTheme = createSelector(\r\n  (state: RootState) => state.ui,\r\n  ui => ui.theme\r\n);\r\n\r\nexport const selectFetching = createSelector(\r\n  (state: RootState) => state.ui,\r\n  ui => ui.fetching\r\n);\r\n","import React from 'react';\r\nimport {Moon, Sun} from 'react-feather';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {Colors} from '../lib/colors';\r\nimport {UITheme, setTheme} from '../redux/reducers/ui';\r\nimport {selectTheme} from '../redux/selectors/ui';\r\n\r\nexport const Switch = () => {\r\n  const dispatch = useDispatch();\r\n  const theme = useSelector(selectTheme);\r\n  const toggleTheme = () => {\r\n    dispatch(setTheme(theme === UITheme.Dark ? UITheme.Light : UITheme.Dark));\r\n  };\r\n  return (\r\n    <StyledSwitch>\r\n      <Input type=\"checkbox\" id=\"switch\" onClick={toggleTheme} />\r\n      <Label htmlFor=\"switch\">\r\n        <StyledSun size={24} />\r\n        <StyledMoon size={24} />\r\n      </Label>\r\n    </StyledSwitch>\r\n  );\r\n};\r\n\r\nconst StyledSun = styled(Sun)`\r\n  position: absolute;\r\n  top: 3px;\r\n  left: 3px;\r\n`;\r\n\r\nconst StyledMoon = styled(Moon)`\r\n  position: absolute;\r\n  top: 3px;\r\n  right: 3px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  &:checked + label {\r\n    background: ${p => p.theme.backgroundColor};\r\n    border: 2px solid #808080;\r\n  }\r\n\r\n  &:checked + label:after {\r\n    left: calc(100% - 3px);\r\n    transform: translateX(-100%);\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  cursor: pointer;\r\n  text-indent: 1;\r\n  width: 60px;\r\n  height: 30px;\r\n  background: #808080;\r\n  display: block;\r\n  border-radius: 30px;\r\n  position: relative;\r\n  border: 2px solid transparent;\r\n\r\n  &:active:after {\r\n    width: 30px;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 3px;\r\n    left: 3px;\r\n    width: 24px;\r\n    height: 24px;\r\n    background: #fffff0;\r\n    border-radius: 24px;\r\n    transition: 0.3s;\r\n    z-index: 2;\r\n  }\r\n`;\r\n\r\nconst StyledSwitch = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 10px;\r\n  color: ${Colors.thirdColor};\r\n  cursor: pointer;\r\n\r\n  input[type='checkbox'] {\r\n    height: 0;\r\n    width: 0;\r\n    visibility: hidden;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <StyledLoader>\r\n      <Spiner />\r\n    </StyledLoader>\r\n  );\r\n};\r\n\r\nconst StyledLoader = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst loader = () => keyframes`\r\n  from {\r\n    -webkit-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    -webkit-transform: rotate(360deg);\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Spiner = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-top: 2px solid #00b2ff;\r\n  border-right: 2px solid transparent;\r\n  margin: 0 8px;\r\n  animation: ${loader} 0.6s linear infinite;\r\n  background: transparent;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default Loader;\r\n","export const themes = {\r\n  dark: {\r\n    backgroundColor: '#282c34',\r\n    textColor: '#282c34',\r\n    reverseColor: '#fffff0'\r\n  },\r\n  light: {\r\n    backgroundColor: '#fffff0',\r\n    textColor: '#fffff0',\r\n    reverseColor: '#282c34'\r\n  }\r\n};\r\n","import {AnyAction} from 'redux';\r\nimport {ApartmentData} from '../../api';\r\n\r\nconst initialState: Array<ApartmentData> = [];\r\n\r\nexport const SET_APARTMENTS = 'SET_APARTMENTS';\r\n\r\nexport default (state = initialState, action: AnyAction): ApartmentData[] => {\r\n  switch (action.type) {\r\n    case SET_APARTMENTS:\r\n      return action.payload.apartments;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setApartments = (apartments: ApartmentData[]): AnyAction => {\r\n  return {type: SET_APARTMENTS, payload: {apartments}};\r\n};\r\n","import {createSelector} from 'reselect';\r\nimport {RootState} from '../reducers';\r\n\r\nexport const selectApartments = createSelector(\r\n  (state: RootState) => state.apartments,\r\n  apartments => apartments\r\n);\r\n","import React, {Suspense, lazy, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport styled, {ThemeProvider} from 'styled-components';\nimport MockDatabase, {ApartmentData} from './api';\nimport {Switch} from './components/Switch';\nimport Loader from './components/Loader';\nimport {Colors} from './lib/colors';\nimport {themes} from './lib/themes';\nimport {setApartments} from './redux/reducers/apartments';\nimport {setFetching} from './redux/reducers/ui';\nimport {selectApartments} from './redux/selectors/apartments';\nimport {selectFetching, selectTheme} from './redux/selectors/ui';\n\nconst ApartmentCard = lazy(() =>\n  import('./components/ApartmentCard').then(module => ({default: module.ApartmentCard}))\n);\n\nexport const App = (): JSX.Element | null => {\n  const theme = useSelector(selectTheme);\n  const dispatch = useDispatch();\n  const apartments = useSelector(selectApartments);\n  const fetching = useSelector(selectFetching);\n  useEffect(() => {\n    console.log(`%c React version: ${React.version}`, `color: ${Colors.mainColor}`);\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await MockDatabase.getApartments();\n        dispatch(setApartments(data as ApartmentData[]));\n        dispatch(setFetching(false));\n      } catch (error) {\n        throw new Error((error as Error).message);\n      } finally {\n        dispatch(setFetching(false));\n      }\n    })();\n  }, []);\n\n  if (fetching) {\n    return <Loader />;\n  }\n\n  return (\n    <ThemeProvider theme={themes[theme]}>\n      <Suspense fallback={<Loader />}>\n        <Main>\n          <CardList>\n            {apartments.map(apartment => (\n              <ApartmentCard {...apartment} key={apartment.id} />\n            ))}\n          </CardList>\n          <Switch />\n        </Main>\n      </Suspense>\n    </ThemeProvider>\n  );\n};\n\nconst CardList = styled.div`\n  margin: 0 auto;\n  width: calc(100% - 85px);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  font-size: calc(10px + 2vmin);\n`;\n\nconst Main = styled.main`\n  background-color: ${p => p.theme.backgroundColor};\n  min-height: 100vh;\n`;\n","import {combineReducers} from 'redux';\r\nimport apartments from './apartments';\r\nimport ui from './ui';\r\n\r\nconst rootReducer = combineReducers({\r\n  apartments,\r\n  ui\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n","import {App} from './App';\r\nimport React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {render} from 'react-dom';\r\nimport {createGlobalStyle} from 'styled-components';\r\nimport store from './redux/store';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }\r\n`;\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}